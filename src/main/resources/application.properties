#서버포트설정
server.port = 80

#로깅 레벨 지정
logging.level.edu.kh.project=debug

server.servlet.session.tracking-modes=cookie
#jsessionid는 새 세션이 만들어지면 클라이언트가 쿠키를 지원하는지 여부를 서버가 알 수 없으므로, 쿠키와 URL에 모두 jsessionid를 만들어 주는 것을 의미하며 url에 붙이거나 헤더에 붙여서 나오게 됩니다.
#클라이언트가 두 번째 요청부터 세션 쿠키를 보내오면 URL에 jsessionid를 붙이지 않고, 쿠키가 없으면 계속 URL에 jsessionid를 붙이게 됩니다.
#그런데 문제는, jsessionid를 탈취당하면 사용자 ID, 비밀번호를 몰라도 접근이 가능하게 됩니다.
#그래서 웹 보안취약점 점검에서는 jsessionid를 꼭 제거하게 되어있습니다.
#


# Hibernate Properties

#테이블 자동 생성 지정 
#create: 기존 테이블 삭제 후 생성
#create-drop ->테이블을 생성한다. 종료 시점에 생성한 테이블을 삭제한다.
#update -> 변경된 것만 반영 한다
#validate -> 엔티티와 테이블이 정상 매핑되었는지 확인
#none -> 사용 X
#spring.jpa.hibernate.ddl-auto=validate
#
##데이터베이스 지정
#spring.jpa.database=oracle
#
##데이터베이스 문법 설정
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
#
##sql을 콘솔에 출력할지 여부
#spring.jpa.show-sql=true
#
##콘솔에 출력되는 sql 형식을 이쁘게 꾸밈
#spring.jpa.properties.hibernate.format_sql=true
#
## X-Frame-Options 비활성화
#security.headers.frame=false


# thymeleaf 접두사, 접미사 설정
#미작성 시 기본값
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html


###오라클 DB 연결 정보
#spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
##spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@localhost:1521/xe
##spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@class-a.xyz:10000/orcl
#spring.datasource.hikari.username=project
#spring.datasource.hikari.password=project1234
#
##jdbc-url 안되면 이렇게
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
##

## HikariCP Connection Pool Properties
##풀이 연결을 사용할 수 있을 때까지 대기하는 최대 시간(ms)을 지정
#spring.datasource.hikari.connection-timeout=30000
#
##풀의 최대 연결 수 설정
#spring.datasource.hikari.maximum-pool-size=20
#
#
##연결이 풀에서 유휴 상태로 있을 수 있는 최대 시간(ms)을 지정
#spring.datasource.hikari.idle-timeout=600000
#
##연결 풀의 이름을 지정
#spring.datasource.hikari.pool-name=MyHikariCP
#
##자동 커밋 끄기
#spring.datasource.hikari.auto-commit=false 
#



#confing.properties 사용 안하면 이렇게 해도 됨

### 마이바티스 설정 ###

##마이바티스 설정 파일 경로
#mybatis.config-location=classpath:mybatis-config.xml
#
##매퍼 파일 경로
#mybatis.mapper-locations=classpath:/mappers/**.xml
#
##별칭을 지정할 파일이 포함된 패키지
##콤마(,) 구분하여 여러 패키지 작성, 별칭은 클래스명의 소문자로 자동 지정
#mybatis.type-aliases-package=edu.kh.project.member.model.dto, edu.kh.project.board.model.dto
#

#mybatis.configuration.jdbc-type-for-null=NULL





# 서버에서 Multipart Request를 허용할지 여부
# 기본값: true
#spring.servlet.multipart.enabled = true


# 파일 또는 매개변수 접근 시 Multipart Request를 게으르게 해결할지 여부
# 기본값: false
#spring.servlet.multipart.resolve-lazily = true



#파일 업로드 시 사용할 webPath, filePath 지정
#my.webPath = /images/member/
#my.member.profilePath = D:\\workspace\\springboot\\boardProject-boot\\src\\main\\resources\\static\\images\\member




##재시작 없이 정적소스(html, js, css) 변경 적용 
#spring.devtools.livereload.enabled=true
#spring.freemarker.cache=false
#spring.thymeleaf.cache=false



# Hibernate Properties
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none